name: run-testenv
on:
  workflow_call:  # allow this workflow to be called from other workflows
    inputs:
      runs-on:
        default: "['ubuntu-latest']"
        required: false
        type: string
      run-testenv:
        default: false
        required: false
        type: string

jobs:
  run-testenv:
    name: "Run Test Environment"
    runs-on: ${{ fromJson(inputs.runs-on) }}
    if: inputs.run-testenv == 'true'

    timeout-minutes: 90

    steps:
      - name: Checkout Sources
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b #4.1.5
      
      - name: Install kernel modules
        uses: ./.github/actions/install-kernel-modules

      - name: Download opendut-CARL bundle
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935
        with:
          name: "opendut-carl-x86_64-unknown-linux-gnu-${{ github.sha }}.tar.gz"
          path: "./target/ci/distribution/x86_64-unknown-linux-gnu/"
      - name: Download opendut-EDGAR bundle
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935
        with:
          name: "opendut-edgar-x86_64-unknown-linux-gnu-${{ github.sha }}.tar.gz"
          path: "./target/ci/distribution/x86_64-unknown-linux-gnu/"

      - name: Download opendut-CLEO bundle
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935
        with:
          name: "opendut-cleo-x86_64-unknown-linux-gnu-${{ github.sha }}.tar.gz"
          path: "./target/ci/distribution/x86_64-unknown-linux-gnu/"

      - name: Download opendut-THEO artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935
        with:
          name: "opendut-theo-x86_64-unknown-linux-gnu-${{ github.sha }}"
          path: "./opendut-theo"

      - name: List files, make theo executable
        run: |
          find ./target/ci/distribution/x86_64-unknown-linux-gnu/
          find . -name opendut-theo -type f -exec ls -la {} +
          chmod +x ./opendut-theo/opendut-theo
          mkdir -p ./docker-logs/theo/

      - name: Start test environment
        run: |
          ./opendut-theo/opendut-theo testenv start --skip-firefox --skip-telemetry | tee ./docker-logs/theo/testenv-start.log

      - name: Start edgar cluster
        run: |
          ./opendut-theo/opendut-theo testenv edgar start | tee ./docker-logs/theo/testenv-edgar-start.log

      - name: Collect container logs
        if: always()
        run: |
          chmod +x .ci/docker/edgar/persist-edgar-logs.sh
          .ci/docker/edgar/persist-edgar-logs.sh | tee ./docker-logs/theo/persist-edgar-logs.log

      - name: "Upload docker logs"
        if: always()
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8
        with:
          name: "docker-logs-${{ github.sha }}"
          path: "./docker-logs/"
          if-no-files-found: error
          retention-days: 7

      - name: Stop test environment
        if: always()
        run: |
          ./opendut-theo/opendut-theo testenv stop

      - name: Destroy test environment
        if: always()
        run: |
          echo "Show all containers"
          docker ps --all
          ./opendut-theo/opendut-theo testenv destroy || { echo Result $?; true; }
          echo "Show all remaining containers"
          docker ps --all
          echo "Remove all exited containers forcefully"
          docker rm --volumes --force $(docker ps -a -q -f status=exited) || true
        continue-on-error: true
