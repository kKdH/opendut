syntax = "proto3";

package opendut.types.peer;

import "opendut/types/topology/topology.proto";
import "opendut/types/util/net.proto";
import "opendut/types/util/uuid.proto";
import "opendut/types/vpn/vpn.proto";
import "opendut/types/peer/executor/executor.proto";


message PeerId {
  opendut.types.util.Uuid uuid = 1;
}

message PeerName {
  string value = 1;
}

message PeerLocation {
  string value = 1;
}

message PeerNetworkDescriptor {
  repeated opendut.types.util.NetworkInterfaceDescriptor interfaces = 1;
  opendut.types.util.NetworkInterfaceName bridge_name = 2;
}

message PeerDescriptor {
  opendut.types.peer.PeerId id = 1;
  opendut.types.peer.PeerName name = 2;
  opendut.types.peer.PeerLocation location = 3;
  opendut.types.peer.PeerNetworkDescriptor network = 4;
  opendut.types.topology.Topology topology = 5;
  opendut.types.peer.executor.ExecutorDescriptors executors = 6;
}

message PeerSetup {
  opendut.types.peer.PeerId id = 1;
  opendut.types.util.Url carl = 5;
  opendut.types.util.Certificate ca = 6;
  opendut.types.util.AuthConfig auth_config = 7;

  opendut.types.vpn.VpnPeerConfig vpn = 11;
}
