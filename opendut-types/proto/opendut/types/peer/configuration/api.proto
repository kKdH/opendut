syntax = "proto3";

package opendut.types.peer.configuration.api;

import "opendut/types/cluster/cluster.proto";
import "opendut/types/peer/executor/executor.proto";
import "opendut/types/peer/configuration/parameter.proto";
import "opendut/types/util/net.proto";
import "opendut/types/util/uuid.proto";

message OldPeerConfiguration {
  optional opendut.types.cluster.ClusterAssignment cluster_assignment = 2;
}


// Configuration sent from CARL to Peer
message PeerConfiguration {
  repeated PeerConfigurationParameterExecutor executors = 1;
  repeated PeerConfigurationParameterEthernetBridge ethernet_bridges = 2;
  repeated PeerConfigurationParameterDeviceInterface device_interfaces = 3;
  //TODO migrate more parameters
}

message PeerConfigurationParameterExecutor {
  PeerConfigurationParameter parameter = 1;
  opendut.types.peer.executor.ExecutorDescriptor value = 2;
}

message PeerConfigurationParameterEthernetBridge {
  PeerConfigurationParameter parameter = 1;
  opendut.types.peer.configuration.parameter.EthernetBridge value = 2;
}

message PeerConfigurationParameterDeviceInterface {
  PeerConfigurationParameter parameter = 1;
  opendut.types.peer.configuration.parameter.DeviceInterface value = 2;
}


message PeerConfigurationParameter {
   PeerConfigurationParameterId id = 1;
   repeated PeerConfigurationParameterId dependencies = 2;
   oneof target {
     PeerConfigurationParameterTargetPresent present = 11;
     PeerConfigurationParameterTargetAbsent absent = 12;
   }
}


// Feedback sent from Peer to CARL, how far it has applied PeerConfiguration
message PeerState {
  repeated PeerConfigurationParameterStateExecutor executors = 1;
}

message PeerConfigurationParameterStateExecutor {
  PeerConfigurationParameterState state = 1;
  opendut.types.peer.executor.ExecutorDescriptor executor = 2;
}

message PeerConfigurationParameterState {
  PeerConfigurationParameterId id = 1;
  oneof state {
    PeerConfigurationParameterTargetPresent present = 11;
    PeerConfigurationParameterTargetAbsent absent = 12;
    PeerConfigurationParameterTargetWaitingForDependencies waiting_for_dependencies = 13;
    PeerConfigurationParameterTargetError error = 14;
  }
}


// Representation from CARL towards UI of the PeerState
message PeerConfigurationParameterStatusReport {
  PeerConfigurationParameterId id = 1;
  oneof state {
    PeerConfigurationParameterTargetPresent present = 11;
    PeerConfigurationParameterTargetCreating creating = 12;
    PeerConfigurationParameterTargetAbsent absent = 13;
    PeerConfigurationParameterTargetRemoving removing = 14;
    PeerConfigurationParameterTargetWaitingForDependencies waiting_for_dependencies = 15;
    PeerConfigurationParameterTargetError error = 16;
  }
}


// General messages
message PeerConfigurationParameterId {
  opendut.types.util.Uuid uuid = 1;
}

message PeerConfigurationParameterTargetPresent {}
message PeerConfigurationParameterTargetAbsent {}
message PeerConfigurationParameterTargetCreating {}
message PeerConfigurationParameterTargetRemoving {}
message PeerConfigurationParameterTargetWaitingForDependencies {
  repeated PeerConfigurationParameterId incomplete_dependencies = 1;
}

message PeerConfigurationParameterTargetError {
  oneof error {
    PeerConfigurationParameterTargetErrorCreatingFailed creating_failed = 1;
    PeerConfigurationParameterTargetErrorRemovingFailed removing_failed = 2;
  }
}
message PeerConfigurationParameterTargetErrorCreatingFailed {
  oneof error {
    UnclassifiedError unclassified = 1;
  }
}
message PeerConfigurationParameterTargetErrorRemovingFailed {
  oneof error {
    UnclassifiedError unclassified = 1;
  }
}
message UnclassifiedError {
  string message = 1;
}
