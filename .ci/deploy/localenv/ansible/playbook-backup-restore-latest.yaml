#!/usr/bin/env ansible-playbook
---
- name: Restore latest backup
  hosts: backend
  gather_facts: false
  tasks:
    - name: Stop database containers
      ansible.builtin.shell: docker stop {{ item }} || true
      loop:
        - "opendut-keycloak"
        - "opendut-keycloak-postgres"
        - "opendut-carl"
        - "opendut-carl-postgres"
        - "opendut-netbird-management"

# TODO: there are two backup locations (docker volume and host system) -> justify (docker volume location is deterministic for scripts) or remove one, add backup rotation?

    - name: Determine backup_id
      include_tasks: tasks/restore/determine_backup_id.yaml

    - name: Restore provision secrets
      include_tasks: tasks/restore/restore_provision_secrets.yaml

    - name: Delete volumes
      ansible.builtin.shell:
        cmd: |
          docker stop {{ item.service }} || true
          docker rm {{ item.service }} || true
          docker volume rm -f {{ item.volume }} || true
      loop:
        - { "service": "opendut-keycloak-postgres", "volume": "opendut_keycloak_postgres_data" }
        - { "service": "opendut-carl-postgres", "volume": "opendut_carl_postgres_data" }
        - { "service": "opendut-netbird-management", "volume": "netbird-mgmt-config" }  # contains netbird client credentials

    - name: Start database containers
      ansible.builtin.shell:
        cmd: |
          docker compose --file .ci/deploy/localenv/docker-compose.yml --env-file .ci/deploy/localenv/data/secrets/.env up --detach {{ item }}
        chdir: "{{ repo_dir }}"
      loop:
        - "keycloak-postgres"  # internal name
        - "carl-postgres"      # internal name

    - name: Restore Postgres database backups
      ansible.builtin.shell:
        cmd: |
          docker exec {{ item }} sh -c "
            psql --username=\$POSTGRES_USER \$POSTGRES_DB < /var/lib/postgresql/backup/{{ backup_id }}/{{ item }}.sql
          "
      loop:
        - "opendut-keycloak-postgres"
        - "opendut-carl-postgres"

    - name: Start dummy netbird management container without service executable
      ansible.builtin.shell:
        cmd: |
          docker compose --file .ci/deploy/localenv/docker-compose.yml --env-file .ci/deploy/localenv/data/secrets/.env run --rm --entrypoint="" --detach --no-deps netbird-management sleep infinity
        chdir: "{{ repo_dir }}"
      register: _netbird_management_id

    - debug: msg="{{ _netbird_management_id }}"
    - name: Extract container id
      set_fact:
        netbird_management_id: "{{ _netbird_management_id.stdout }}"

    - name: Restore Netbird management service
      ansible.builtin.shell:
        cmd: |
          docker exec {{ netbird_management_id }} sh -c "
            # delete old files if present
            rm -f /var/lib/netbird/*

            cp /var/lib/backup/{{ backup_id }}/netbird/* /var/lib/netbird/
          "
    - name: Stop dummy netbird management container without service executable
      ansible.builtin.shell:
        cmd: |
          docker kill {{ netbird_management_id }}

    - name: Start provisioning container to synchronize provision volume back to host
      ansible.builtin.shell:
        cmd: |
          docker compose --file .ci/deploy/localenv/docker-compose.yml up --build provision-secrets
        chdir: "{{ repo_dir }}"

    - name: Start opendut containers
      ansible.builtin.shell:
        cmd: |
          docker compose --file .ci/deploy/localenv/docker-compose.yml --env-file .ci/deploy/localenv/data/secrets/.env up --detach
        chdir: "{{ repo_dir }}"
