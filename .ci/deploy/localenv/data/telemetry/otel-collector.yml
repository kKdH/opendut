receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        auth:
          authenticator: oidc
  docker_stats:
    endpoint: unix:///var/run/docker.sock
    collection_interval: 15s
    metrics:
processors:
  batch:

  attributes:
    actions:
      - action: insert
        key: loki.attribute.labels
        value: test

  resource:
    attributes:
      - action: insert
        key: loki.resource.labels
        value: test

exporters:
  debug:
    verbosity: detailed
  prometheus:
    endpoint: 0.0.0.0:8889
    const_labels:
      project: opendut
    resource_to_telemetry_conversion: # include information about specific containers
      enabled: true
  otlp/tempo:
    endpoint: tempo:4317
    tls:
      insecure: true
  loki:
    endpoint: "http://loki:3100/loki/api/v1/push"
    tls:
      insecure: true
    headers:
      "X-Scope-OrgID": "tenant1"
    default_labels_enabled:
      exporter: true
      job: true

extensions:
  # healthcheck endpoint: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/healthcheckextension/README.md
  # http://otel-collector:13133/health/status
  health_check:
  # Performance Profiler: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/pprofextension/README.md
  pprof:
    endpoint: :1888
  # Enables an extension that serves zPages, an HTTP endpoint that provides live data for debugging different components
  zpages:
    endpoint: :55679
  #
  oidc:
    issuer_url: https://auth.opendut.local/realms/opendut
    audience: account

service:
  extensions: [ pprof, zpages, health_check, oidc ]
  telemetry:
    logs:
      level: "debug"
  pipelines:
    traces:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ debug, otlp/tempo ]
    metrics:
      receivers: [ otlp, docker_stats ]
      processors: [ batch ]
      exporters: [ debug, prometheus ]
    logs:
      receivers: [ otlp ]
      processors: [ batch, resource, attributes ]
      exporters: [ debug, loki ]
